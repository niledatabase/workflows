name: 'Docker: Build image'
description: 'Builds a Docker image using Buildx'

inputs:
  repository:
    description: 'The OCI repository to push the image to'
    required: true
    default: ghcr.io/${{ github.repository }}
  tags:
    description: 'The tags to push the image with'
    required: false
    default: |
      type=ref,event=branch
      type=ref,event=pr
      type=semver,pattern={{raw}}
      type=sha
      type=sha,format=long
  context:
    description: 'The build context'
    required: false
    default: '.'
  file:
    description: 'The Dockerfile to use'
    required: false
    default: 'Dockerfile'
  build-args:
    description: 'The build arguments to pass to the Docker build'
    required: false
  target:
    description: 'The build target to use'
    required: false
  push-by-digest:
    description: 'Whether to push the image by digest'
    required: false
    default: 'false'
  push:
    description: 'Whether to push the image'
    required: false
    default: 'true'
  cache-suffix:
    description: 'The suffix to use for the cache key'
    required: false
    default: ''
  github-token:
    description: 'The GitHub token to use for authentication'
    required: false

outputs:
  digest:
    description: 'Digest of the built image'
    value: ${{ steps.build.outputs.digest }}

runs:
  using: 'composite'
  steps:
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ inputs.repository }}
        tags: ${{ inputs.tags }}

    - name: Log into registry ghcr.io
      if: ${{ inputs.github-token != '' }}
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.github-token }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Generate cache key
      id: generate_cache_key
      uses: actions/github-script@v7
      with:
        script: |
          const suffix = "${{ inputs.cache-suffix }}"   // e.g., "latest" or "" if empty
          const runnerArch = "${{ runner.arch }}" // e.g.,  X86, X64, ARM, or ARM64

          // Conditionally include the suffix
          let cacheKey
          if (suffix && suffix.trim().length > 0) {
            cacheKey = `cache-${runnerArch}-${suffix}`
          } else {
            cacheKey = `cache-${runnerArch}`
          }

          core.info(`Using cache key: ${cacheKey}`)

          // Set this as a step output
          core.setOutput("cache_key", cacheKey)

    - name: Build and push by digest
      id: build
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.file }}
        labels: ${{ steps.meta.outputs.labels }}
        tags: ${{ inputs.push-by-digest == 'false' && steps.meta.outputs.tags || '' }}
        annotations: ${{ steps.meta.outputs.annotations }}
        build-args: ${{ inputs.build-args }}
        target: ${{ inputs.target }}
        provenance: false
        cache-from: type=registry,ref=${{ inputs.repository }}:${{ steps.generate_cache_key.outputs.cache_key }}
        cache-to: type=registry,ref=${{ inputs.repository }}:${{ steps.generate_cache_key.outputs.cache_key }},mode=max
        outputs: type=image,"name=${{ inputs.repository }}",push-by-digest=${{ inputs.push-by-digest }},push=${{ inputs.push }}
