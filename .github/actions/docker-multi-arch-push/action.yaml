name: 'Docker: Publish multi-arch image'
description: 'Merges the digests into a single manifest & pushes it'

inputs:
  repository:
    description: 'The OCI repository to push the image to'
    required: false
    default: ghcr.io/${{ github.repository }}
  tags:
    description: 'The tags to push the image with'
    required: false
    default: |
      type=ref,event=branch
      type=ref,event=pr
      type=semver,pattern={{raw}}
      type=sha
      type=sha,suffix=-${{ github.ref_name }}-{{commit_date 'X'}},enabled=${{ github.ref_name == 'master' || github.ref_name == 'main' }}
      type=sha,prefix=${{ github.ref_name }}-sha-,suffix=-ts-{{commit_date 'X'}}
      type=sha,format=long
  artifact-digest-pattern:
    description: 'The pattern to match the artifact digest files'
    required: false
    default: 'digests-*'
  github-token:
    description: 'The GitHub token to use for authentication'
    required: true

outputs:
  digest:
    description: 'Digest of the built image'
    value: ${{ steps.inspect.outputs.digest }}

runs:
  using: 'composite'
  steps:
    - name: Download digests
      uses: actions/download-artifact@v4
      with:
        path: ${{ runner.temp }}/digests
        pattern: ${{ inputs.artifact-digest-pattern }}
        merge-multiple: true

    - name: Log into registry ghcr.io
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.github-token }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ inputs.repository }}
        tags: ${{ inputs.tags }}

    - name: Create manifest list and push
      working-directory: ${{ runner.temp }}/digests
      shell: bash
      run: |
        docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
          $(printf '${{ inputs.repository }}@sha256:%s ' *)

    - name: Inspect image
      id: inspect
      shell: bash
      run: |
        docker buildx imagetools inspect ${{ inputs.repository }}:${{ steps.meta.outputs.version }}
        digest=$(docker buildx imagetools inspect ${{ inputs.repository }}:${{ steps.meta.outputs.version }} --format "{{json .Manifest}}" | jq -r '.digest')
        echo "digest=${digest}" >> $GITHUB_OUTPUT
