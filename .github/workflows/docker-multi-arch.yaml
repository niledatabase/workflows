name: Build multi-arch images

on:
  workflow_call:
    inputs:
      dockerfile:
        required: false
        default: Dockerfile
        type: string
      oci_repository:
        required: false
        type: string
        default: ghcr.io/${{ github.repository }}
      context:
        required: false
        type: string
        default: "."
      image-metadata-flavor:
        required: false
        type: string
      image-build-args:
        required: false
        type: string
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - docker_platform: linux/arm64
            runner: full-ubuntu-arm-4-core
          - docker_platform: linux/amd64
            runner: ubuntu-latest-4core
    runs-on: ${{ matrix.platform.runner }}
    steps:
      - uses: actions/checkout@v4

      - name: Get Git commit timestamps
        run: echo "TIMESTAMP=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV

      - name: Prepare
        run: |
          platform=${{ matrix.platform.docker_platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ inputs.oci_repository }}

      - name: Log into registry ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: "us-west-2"
          role-to-assume: arn:aws:iam::483388953608:role/github-role-Role-MIMIOJ3EPX6V

      - name: Login to ECR
        uses: docker/login-action@v3
        with:
          registry: 483388953608.dkr.ecr.us-west-2.amazonaws.com

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        env:
          SOURCE_DATE_EPOCH: ${{ env.TIMESTAMP }}
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          platforms: ${{ matrix.platform.docker_platform }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ inputs.image_build_args }}
          provenance: false
          cache-from: |
            type=registry,ref=${{ inputs.oci_repository }}:cache-${{ matrix.platform.runner }}-$default-branch
            type=registry,ref=${{ inputs.oci_repository }}:cache-${{ matrix.platform.runner }}-${{ github.ref_name }}
          cache-to: |
            type=registry,ref=${{ inputs.oci_repository }}:cache-${{ matrix.platform.runner }}-${{ github.ref_name }},"mode=max"
          outputs: type=image,"name=${{ inputs.oci_repository }}",push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Log into registry ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          flavor: ${{ inputs.image_metadata_flavor }}
          images: |
            ${{ inputs.oci_repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{raw}}
            type=sha

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ inputs.oci_repository }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ inputs.oci_repository }}:${{ steps.meta.outputs.version }}
